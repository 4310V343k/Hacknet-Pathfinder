<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_pathfinder_1_1_event_1_1_event_manager" kind="class" language="C#" prot="public">
    <compoundname>Pathfinder::Event::EventManager</compoundname>
      <sectiondef kind="package-static-attrib">
      <memberdef kind="variable" id="class_pathfinder_1_1_event_1_1_event_manager_1a0f5618ab7afa7e97de03b553b8dafc75" prot="package" static="yes" mutable="no">
        <type>Dictionary&lt; Type, List&lt; Tuple&lt; Action&lt; <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> &gt;, string, string, int &gt; &gt; &gt;</type>
        <definition>Dictionary&lt;Type, List&lt;Tuple&lt;Action&lt;PathfinderEvent&gt;, string, string, int&gt; &gt; &gt; Pathfinder.Event.EventManager.eventListeners</definition>
        <argsstring></argsstring>
        <name>eventListeners</name>
        <initializer>=
            new Dictionary&lt;Type, List&lt;Tuple&lt;Action&lt;<ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref>&gt;, string, string, int&gt;&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="12" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_pathfinder_1_1_event_1_1_event_manager_1a7da098f93c16c09c3a9188cfbd9c89f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Event.EventManager.RegisterListener</definition>
        <argsstring>(Type pathfinderEventType, Action&lt; PathfinderEvent &gt; listener, string debugName=null, int priority=0)</argsstring>
        <name>RegisterListener</name>
        <param>
          <type>Type</type>
          <declname>pathfinderEventType</declname>
        </param>
        <param>
          <type>Action&lt; <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> &gt;</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>string</type>
          <declname>debugName</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>int</type>
          <declname>priority</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="15" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="15" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_event_1_1_event_manager_1a646b92fd71bb78f081b7d3a164055872" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Event.EventManager.RegisterListener</definition>
        <argsstring>(Type pathfinderEventType, Action&lt; PathfinderEvent &gt; listener, string debugName=null)</argsstring>
        <name>RegisterListener</name>
        <param>
          <type>Type</type>
          <declname>pathfinderEventType</declname>
        </param>
        <param>
          <type>Action&lt; <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> &gt;</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>string</type>
          <declname>debugName</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Registers an event listener by runtime type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pathfinderEventType</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> Runtime Type to register for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener function that will be executed on an event call</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to assign for debug purposes</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="39" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_event_1_1_event_manager_1afddae98e1ee28e3eaff3fb447c42c374" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Event.EventManager.RegisterListener&lt; T &gt;</definition>
        <argsstring>(Action&lt; T &gt; listener, string debugName=null)</argsstring>
        <name>RegisterListener&lt; T &gt;</name>
        <param>
          <type>Action&lt; T &gt;</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>string</type>
          <declname>debugName</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Registers an event listener by compile time type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener function that will be executed on an event call</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to assign for debug purposes</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> Compile time Type to listen for</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="51" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_event_1_1_event_manager_1a42972b3abb0b3d901ae52fbb25c621ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Event.EventManager.UnregisterListener</definition>
        <argsstring>(Type pathfinderEventType, Action&lt; PathfinderEvent &gt; listener)</argsstring>
        <name>UnregisterListener</name>
        <param>
          <type>Type</type>
          <declname>pathfinderEventType</declname>
        </param>
        <param>
          <type>Action&lt; <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> &gt;</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Removes an event listener by runtime type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pathfinderEventType</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> Runtime Type to remove for</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener function to remove</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="65" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="65" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_event_1_1_event_manager_1a31a5ca4c476e8a791925d93fe00a6985" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Event.EventManager.UnregisterListener&lt; T &gt;</definition>
        <argsstring>(Action&lt; T &gt; listener)</argsstring>
        <name>UnregisterListener&lt; T &gt;</name>
        <param>
          <type>Action&lt; T &gt;</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
<para>Removes an event listener by compile time type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener function to remove</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> Compile time Type to remove for</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="79" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="79" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_event_1_1_event_manager_1a5262ffac1faf4da6d91ae234ad5eef03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Event.EventManager.CallEvent</definition>
        <argsstring>(PathfinderEvent pathfinderEvent)</argsstring>
        <name>CallEvent</name>
        <param>
          <type><ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref></type>
          <declname>pathfinderEvent</declname>
        </param>
        <briefdescription>
<para>Calls a <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pathfinderEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event" kindref="compound">PathfinderEvent</ref> to call.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Event/EventManager.cs" line="100" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="100" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Pathfinder/Event/EventManager.cs" line="11" column="1" bodyfile="Pathfinder/Event/EventManager.cs" bodystart="10" bodyend="131"/>
    <listofallmembers>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1a5262ffac1faf4da6d91ae234ad5eef03" prot="public" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>CallEvent</name></member>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1a0f5618ab7afa7e97de03b553b8dafc75" prot="package" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>eventListeners</name></member>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1a7da098f93c16c09c3a9188cfbd9c89f6" prot="public" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>RegisterListener</name></member>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1a646b92fd71bb78f081b7d3a164055872" prot="public" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>RegisterListener</name></member>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1afddae98e1ee28e3eaff3fb447c42c374" prot="public" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>RegisterListener&lt; T &gt;</name></member>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1a42972b3abb0b3d901ae52fbb25c621ed" prot="public" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>UnregisterListener</name></member>
      <member refid="class_pathfinder_1_1_event_1_1_event_manager_1a31a5ca4c476e8a791925d93fe00a6985" prot="public" virt="non-virtual"><scope>Pathfinder::Event::EventManager</scope><name>UnregisterListener&lt; T &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
