<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_hacknet_1_1_display_module" kind="class" language="C#" prot="public">
    <compoundname>Hacknet::DisplayModule</compoundname>
    <basecompoundref refid="class_hacknet_1_1_core_module" prot="public" virt="non-virtual">Hacknet.CoreModule</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1ae0bdfea5e6e995b8881b5865396a0243" prot="public" static="no" mutable="no">
        <type>Texture2D</type>
        <definition>Texture2D Hacknet.DisplayModule.lockSprite</definition>
        <argsstring></argsstring>
        <name>lockSprite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="703" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1a10dd3dd07d549a03cc558f097c66ff34" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Hacknet.DisplayModule.y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="704" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1a9df6ff7082f59575eca00cab4ba301ab" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Hacknet.DisplayModule.x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="705" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1aabaf53eb54d25f8cb076a9f051eade84" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.DisplayModule.LastDisplayedFileSourceIP</definition>
        <argsstring></argsstring>
        <name>LastDisplayedFileSourceIP</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="706" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1afbcce0d3ce906470bae691e649e0370c" prot="public" static="no" mutable="no">
        <type><ref refid="class_hacknet_1_1_folder" kindref="compound">Folder</ref></type>
        <definition>Folder Hacknet.DisplayModule.LastDisplayedFileFolder</definition>
        <argsstring></argsstring>
        <name>LastDisplayedFileFolder</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="707" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1ae91aaf83a52cd450236b7a7ad740daab" prot="public" static="no" mutable="no">
        <type>string []</type>
        <definition>string [] Hacknet.DisplayModule.commandArgs</definition>
        <argsstring></argsstring>
        <name>commandArgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="708" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1a03789c6fee12c56518245d36feae8d25" prot="public" static="no" mutable="no">
        <type>Texture2D</type>
        <definition>Texture2D Hacknet.DisplayModule.openLockSprite</definition>
        <argsstring></argsstring>
        <name>openLockSprite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="709" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_display_module_1a14ac71e9fe8c25107c7eb8b5dc03fee4" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.DisplayModule.command</definition>
        <argsstring></argsstring>
        <name>command</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="710" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="710" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1af82a5541905b69946c8006b165184970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.DisplayModule.DisplayModule</definition>
        <argsstring>(Rectangle location, OS operatingSystem)</argsstring>
        <name>DisplayModule</name>
        <param>
          <type><ref refid="_vector_8cs_1a9e9352b983f7014fddce7c6530f054d7" kindref="member">Rectangle</ref></type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="class_hacknet_1_1_o_s" kindref="compound">OS</ref></type>
          <declname>operatingSystem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1a41805d73d8ee28b707ea3b302ec22b04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>override void</type>
        <definition>override void Hacknet.DisplayModule.Draw</definition>
        <argsstring>(float t)</argsstring>
        <name>Draw</name>
        <reimplements refid="class_hacknet_1_1_module_1a15f0e31db7bd178fbac0a3ae6688272a">Draw</reimplements>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1ab010d981d59a8b6868e35ff386ab6ef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.DisplayModule.forceLogin</definition>
        <argsstring>(string username, string pass)</argsstring>
        <name>forceLogin</name>
        <param>
          <type>string</type>
          <declname>username</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1a23bd318120da84b6f73839dd0dce3bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Texture2D</type>
        <definition>Texture2D Hacknet.DisplayModule.GetComputerImage</definition>
        <argsstring>(Computer comp)</argsstring>
        <name>GetComputerImage</name>
        <param>
          <type><ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref></type>
          <declname>comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="720" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1a7386898df9f17415fde4824b7178036d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>override void</type>
        <definition>override void Hacknet.DisplayModule.LoadContent</definition>
        <argsstring>()</argsstring>
        <name>LoadContent</name>
        <reimplements refid="class_hacknet_1_1_core_module_1a3152fd15281c36fa3a894900ac6d9b3f">LoadContent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="721" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1af4eeca75064686b260303d6fc367c2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.DisplayModule.typeChanged</definition>
        <argsstring>()</argsstring>
        <name>typeChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1a0ee7112503d278e06418e7c9270f6929" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>override void</type>
        <definition>override void Hacknet.DisplayModule.Update</definition>
        <argsstring>(float t)</argsstring>
        <name>Update</name>
        <reimplements refid="class_hacknet_1_1_module_1a7740ee2ced93f5fa1c3b27d9785996ed">Update</reimplements>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="723" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1a356cd8557dc0180d6f496269552f086b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Hacknet.DisplayModule.cleanSplitForWidth</definition>
        <argsstring>(string s, int width)</argsstring>
        <name>cleanSplitForWidth</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1a2b0cabadcb2a5c309e80450534755c5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Hacknet.DisplayModule.splitForWidth</definition>
        <argsstring>(string s, int width)</argsstring>
        <name>splitForWidth</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_display_module_1af26918e205595692ecb558362abe7d12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Hacknet.DisplayModule.splitForWidth</definition>
        <argsstring>(string s, int width, bool correct)</argsstring>
        <name>splitForWidth</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>correct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="716" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="155">
        <label>Hacknet.DisplayModule</label>
        <link refid="class_hacknet_1_1_display_module"/>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
      <node id="157">
        <label>Module</label>
        <link refid="class_hacknet_1_1_module"/>
      </node>
      <node id="156">
        <label>CoreModule</label>
        <link refid="class_hacknet_1_1_core_module"/>
        <childnode refid="157" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="174">
        <label>Framework</label>
      </node>
      <node id="158">
        <label>Hacknet.DisplayModule</label>
        <link refid="class_hacknet_1_1_display_module"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
        <childnode refid="171" relation="usage">
          <edgelabel>LastDisplayedFileFolder</edgelabel>
        </childnode>
      </node>
      <node id="167">
        <label>Hacknet.Computer</label>
        <link refid="class_hacknet_1_1_computer"/>
        <childnode refid="168" relation="usage">
          <edgelabel>reportingShell</edgelabel>
        </childnode>
        <childnode refid="170" relation="usage">
          <edgelabel>files</edgelabel>
        </childnode>
        <childnode refid="173" relation="usage">
          <edgelabel>firewall</edgelabel>
        </childnode>
      </node>
      <node id="162">
        <label>GameScreen</label>
        <link refid="class_hacknet_1_1_game_screen"/>
      </node>
      <node id="160">
        <label>Module</label>
        <link refid="class_hacknet_1_1_module"/>
        <childnode refid="161" relation="usage">
          <edgelabel>os</edgelabel>
        </childnode>
        <childnode refid="174" relation="usage">
          <edgelabel>bounds</edgelabel>
        </childnode>
      </node>
      <node id="159">
        <label>CoreModule</label>
        <link refid="class_hacknet_1_1_core_module"/>
        <childnode refid="160" relation="public-inheritance">
        </childnode>
      </node>
      <node id="169">
        <label>ExeModule</label>
        <link refid="class_hacknet_1_1_exe_module"/>
        <childnode refid="160" relation="public-inheritance">
        </childnode>
      </node>
      <node id="166">
        <label>Hacknet.NetworkMap</label>
        <link refid="class_hacknet_1_1_network_map"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
        <childnode refid="167" relation="usage">
          <edgelabel>mailServer</edgelabel>
          <edgelabel>academicDatabase</edgelabel>
          <edgelabel>lastAddedNode</edgelabel>
        </childnode>
      </node>
      <node id="168">
        <label>Hacknet.ShellExe</label>
        <link refid="class_hacknet_1_1_shell_exe"/>
        <childnode refid="169" relation="public-inheritance">
        </childnode>
      </node>
      <node id="173">
        <label>Hacknet.Firewall</label>
        <link refid="class_hacknet_1_1_firewall"/>
      </node>
      <node id="170">
        <label>Hacknet.FileSystem</label>
        <link refid="class_hacknet_1_1_file_system"/>
        <childnode refid="171" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="165">
        <label>Hacknet.Terminal</label>
        <link refid="class_hacknet_1_1_terminal"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
      </node>
      <node id="164">
        <label>Hacknet.CrashModule</label>
        <link refid="class_hacknet_1_1_crash_module"/>
        <childnode refid="160" relation="public-inheritance">
        </childnode>
      </node>
      <node id="172">
        <label>FileType</label>
        <link refid="interface_hacknet_1_1_file_type"/>
      </node>
      <node id="161">
        <label>Hacknet.OS</label>
        <link refid="class_hacknet_1_1_o_s"/>
        <childnode refid="162" relation="public-inheritance">
        </childnode>
        <childnode refid="163" relation="usage">
          <edgelabel>ram</edgelabel>
        </childnode>
        <childnode refid="164" relation="usage">
          <edgelabel>crashModule</edgelabel>
        </childnode>
        <childnode refid="158" relation="usage">
          <edgelabel>display</edgelabel>
        </childnode>
        <childnode refid="165" relation="usage">
          <edgelabel>terminal</edgelabel>
        </childnode>
        <childnode refid="166" relation="usage">
          <edgelabel>netMap</edgelabel>
        </childnode>
        <childnode refid="167" relation="usage">
          <edgelabel>opponentComputer</edgelabel>
          <edgelabel>connectedComp</edgelabel>
          <edgelabel>thisComputer</edgelabel>
        </childnode>
        <childnode refid="174" relation="usage">
          <edgelabel>fullscreen</edgelabel>
        </childnode>
        <childnode refid="161" relation="usage">
          <edgelabel>currentInstance</edgelabel>
        </childnode>
      </node>
      <node id="171">
        <label>Hacknet.Folder</label>
        <link refid="class_hacknet_1_1_folder"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
      </node>
      <node id="163">
        <label>Hacknet.RamModule</label>
        <link refid="class_hacknet_1_1_ram_module"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Pathfinder/Docs/Hacknet.cs" line="702" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="701" bodyend="724"/>
    <listofallmembers>
      <member refid="class_hacknet_1_1_module_1a9f5568515780ca1149d57051fc2f7c77" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>bounds</name></member>
      <member refid="class_hacknet_1_1_module_1a5ea045ba822711fc59f9e10766955f73" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>Bounds</name></member>
      <member refid="class_hacknet_1_1_display_module_1a356cd8557dc0180d6f496269552f086b" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>cleanSplitForWidth</name></member>
      <member refid="class_hacknet_1_1_display_module_1a14ac71e9fe8c25107c7eb8b5dc03fee4" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>command</name></member>
      <member refid="class_hacknet_1_1_display_module_1ae91aaf83a52cd450236b7a7ad740daab" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>commandArgs</name></member>
      <member refid="class_hacknet_1_1_display_module_1af82a5541905b69946c8006b165184970" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>DisplayModule</name></member>
      <member refid="class_hacknet_1_1_display_module_1a41805d73d8ee28b707ea3b302ec22b04" prot="public" virt="virtual"><scope>Hacknet::DisplayModule</scope><name>Draw</name></member>
      <member refid="class_hacknet_1_1_module_1a61074e32ce3d681fb28e41c71a92889d" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>drawFrame</name></member>
      <member refid="class_hacknet_1_1_display_module_1ab010d981d59a8b6868e35ff386ab6ef9" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>forceLogin</name></member>
      <member refid="class_hacknet_1_1_display_module_1a23bd318120da84b6f73839dd0dce3bb5" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>GetComputerImage</name></member>
      <member refid="class_hacknet_1_1_core_module_1a9e07c7e2852ea839082bba068cda5b19" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>inputLocked</name></member>
      <member refid="class_hacknet_1_1_display_module_1afbcce0d3ce906470bae691e649e0370c" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>LastDisplayedFileFolder</name></member>
      <member refid="class_hacknet_1_1_display_module_1aabaf53eb54d25f8cb076a9f051eade84" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>LastDisplayedFileSourceIP</name></member>
      <member refid="class_hacknet_1_1_display_module_1a7386898df9f17415fde4824b7178036d" prot="public" virt="virtual"><scope>Hacknet::DisplayModule</scope><name>LoadContent</name></member>
      <member refid="class_hacknet_1_1_display_module_1ae0bdfea5e6e995b8881b5865396a0243" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>lockSprite</name></member>
      <member refid="class_hacknet_1_1_module_1aac9b4cea405a9ba9e385e1107de7c507" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>Module</name></member>
      <member refid="class_hacknet_1_1_module_1ac87b80233cd3d601009c98d29b926b9f" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>name</name></member>
      <member refid="class_hacknet_1_1_display_module_1a03789c6fee12c56518245d36feae8d25" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>openLockSprite</name></member>
      <member refid="class_hacknet_1_1_module_1a5f28f2631470430dfc7ce75e3a1ceaed" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>os</name></member>
      <member refid="class_hacknet_1_1_module_1a7cf1a874d7c2ab76e6ed26471cfaa556" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>PANEL_HEIGHT</name></member>
      <member refid="class_hacknet_1_1_core_module_1a163b3d4f37172dbb43cd570908fad1ed" prot="public" virt="virtual"><scope>Hacknet::DisplayModule</scope><name>PostDrawStep</name></member>
      <member refid="class_hacknet_1_1_core_module_1ac2dd0e7330981cec99958caabfa08a1e" prot="public" virt="virtual"><scope>Hacknet::DisplayModule</scope><name>PreDrawStep</name></member>
      <member refid="class_hacknet_1_1_display_module_1a2b0cabadcb2a5c309e80450534755c5e" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>splitForWidth</name></member>
      <member refid="class_hacknet_1_1_display_module_1af26918e205595692ecb558362abe7d12" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>splitForWidth</name></member>
      <member refid="class_hacknet_1_1_module_1a3c22224a83a15603c5f6bfbb778613b2" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>spriteBatch</name></member>
      <member refid="class_hacknet_1_1_display_module_1af4eeca75064686b260303d6fc367c2d7" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>typeChanged</name></member>
      <member refid="class_hacknet_1_1_display_module_1a0ee7112503d278e06418e7c9270f6929" prot="public" virt="virtual"><scope>Hacknet::DisplayModule</scope><name>Update</name></member>
      <member refid="class_hacknet_1_1_module_1ad92e134fd646691737cc24aa434a336f" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>visible</name></member>
      <member refid="class_hacknet_1_1_display_module_1a9df6ff7082f59575eca00cab4ba301ab" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>x</name></member>
      <member refid="class_hacknet_1_1_display_module_1a10dd3dd07d549a03cc558f097c66ff34" prot="public" virt="non-virtual"><scope>Hacknet::DisplayModule</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
