<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions" kind="class" language="C#" prot="public">
    <compoundname>Pathfinder::Game::OS::Extensions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a15cb9803d2ecbd2a53ea93548153fa1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; Hacknet.ExeModule &gt;</type>
        <definition>static List&lt;Hacknet.ExeModule&gt; Pathfinder.Game.OS.Extensions.GetExesFor</definition>
        <argsstring>(this Hacknet.OS os, Type instanceType)</argsstring>
        <name>GetExesFor</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>instanceType</declname>
        </param>
        <briefdescription>
<para>Retrieves the List of <ref refid="namespace_pathfinder_1_1_game_1_1_exe_module" kindref="compound">ExeModule</ref> whose Type is exactly instanceType </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instanceType</parametername>
</parameternamelist>
<parameterdescription>
<para>The exact Type to search for in the <ref refid="namespace_pathfinder_1_1_executable" kindref="compound">Executable</ref> List</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="14" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="14" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a210838cd29e560ada42c3356f4b5f710" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; T &gt;</type>
        <definition>static List&lt;T&gt; Pathfinder.Game.OS.Extensions.GetExesFor&lt; T &gt;</definition>
        <argsstring>(this Hacknet.OS os)</argsstring>
        <name>GetExesFor&lt; T &gt;</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Retrieves the List of <ref refid="namespace_pathfinder_1_1_game_1_1_exe_module" kindref="compound">ExeModule</ref> List whose Type is or is derived from T </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type or derivative of the type to search for in the <ref refid="namespace_pathfinder_1_1_executable" kindref="compound">Executable</ref> List</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="27" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1ac553c7d9ed908a25fcab8091f82e4e9d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; Executable.Instance &gt;</type>
        <definition>static List&lt;Executable.Instance&gt; Pathfinder.Game.OS.Extensions.GetModExeInterfaceFor</definition>
        <argsstring>(this Hacknet.OS os, Type interfaceType)</argsstring>
        <name>GetModExeInterfaceFor</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>interfaceType</declname>
        </param>
        <briefdescription>
<para>Retrieves the List of <ref refid="class_pathfinder_1_1_executable_1_1_instance" kindref="compound">Executable.Instance</ref> whose Type is exactly instanceType </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interfaceType</parametername>
</parameternamelist>
<parameterdescription>
<para>The exact Type to search for in the <ref refid="namespace_pathfinder_1_1_executable" kindref="compound">Executable</ref> List</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="40" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a6cb7772226d053dcecf32b85fb8bf66d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; Executable.Instance &gt;</type>
        <definition>static List&lt;Executable.Instance&gt; Pathfinder.Game.OS.Extensions.GetModExeInterfaceFor&lt; T &gt;</definition>
        <argsstring>(this Hacknet.OS os)</argsstring>
        <name>GetModExeInterfaceFor&lt; T &gt;</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Retrieves the List of <ref refid="class_pathfinder_1_1_executable_1_1_instance" kindref="compound">Executable.Instance</ref> List whose Type is or is derived from T </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type or derivative of the type to search for in the <ref refid="namespace_pathfinder_1_1_executable" kindref="compound">Executable</ref> List</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="53" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a930f2f42ec0f47e81c0aaae7adf4dc46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Pathfinder.Game.OS.Extensions.KillExecutableModule</definition>
        <argsstring>(this Hacknet.OS os, Hacknet.ExeModule module, bool shouldWrite=false)</argsstring>
        <name>KillExecutableModule</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>Hacknet.ExeModule</type>
          <declname>module</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldWrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Kills the ExeModules on the <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput>, if <ref refid="namespace_pathfinder_1_1_game_1_1_exe_module" kindref="compound">ExeModule</ref> was killed, <computeroutput>false</computeroutput> otherwise.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_pathfinder_1_1_game_1_1_exe_module" kindref="compound">ExeModule</ref> to kill.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldWrite</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to <computeroutput>true</computeroutput> then success will be written to the <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="69" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a232418e0ac2f1924e45d81fb6c2c0ca1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Pathfinder.Game.OS.Extensions.KillExecutableModule</definition>
        <argsstring>(this Hacknet.OS os, string input, bool searchName=false, bool shouldWrite=false)</argsstring>
        <name>KillExecutableModule</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>string</type>
          <declname>input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>searchName</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldWrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Kills the first ExeModules on the <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref> that matches the string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput>, if <ref refid="namespace_pathfinder_1_1_game_1_1_exe_module" kindref="compound">ExeModule</ref> was killed, <computeroutput>false</computeroutput> otherwise.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input string (or string representation of the integer PID) to search against.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>searchName</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to <computeroutput>true</computeroutput> then can search by IdentifierName.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldWrite</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to <computeroutput>true</computeroutput> will write success and failure to the <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="84" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="84" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a34c0b845669d4737ea6e52a26b3af85f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Pathfinder.Game.OS.Extensions.KillAllExecutableModules</definition>
        <argsstring>(this Hacknet.OS os, bool shouldWrite=false)</argsstring>
        <name>KillAllExecutableModules</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldWrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Kills all ExeModules. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldWrite</parametername>
</parameternamelist>
<parameterdescription>
<para>If set to <computeroutput>true</computeroutput> will write success to the <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="109" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a3c7dc4252ef9aa625353a05831412ed6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Hacknet.Computer</type>
        <definition>static Hacknet.Computer Pathfinder.Game.OS.Extensions.GetCurrentComputer</definition>
        <argsstring>(this Hacknet.OS os)</argsstring>
        <name>GetCurrentComputer</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Retrieves the active network <ref refid="namespace_pathfinder_1_1_game_1_1_computer" kindref="compound">Computer</ref> according to the <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1aa650fe7f1b31a300e7c768804839678e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Hacknet.OS</type>
        <definition>static Hacknet.OS Pathfinder.Game.OS.Extensions.Write</definition>
        <argsstring>(this Hacknet.OS os, string write, params object[] args)</argsstring>
        <name>Write</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>string</type>
          <declname>write</declname>
        </param>
        <param>
          <type>params object []</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Writes the formatted string to <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref> terminal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write</parametername>
</parameternamelist>
<parameterdescription>
<para>The formatted string to write.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="125" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a5e9a84b3d11bfc05f86fe6b79ab416f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Hacknet.OS</type>
        <definition>static Hacknet.OS Pathfinder.Game.OS.Extensions.WriteSingle</definition>
        <argsstring>(this Hacknet.OS os, string write, params object[] args)</argsstring>
        <name>WriteSingle</name>
        <param>
          <type>this Hacknet.OS</type>
          <declname>os</declname>
        </param>
        <param>
          <type>string</type>
          <declname>write</declname>
        </param>
        <param>
          <type>params object []</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Writes the formatted string directly to <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref> terminal. Less safe then <ref refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1aa650fe7f1b31a300e7c768804839678e" kindref="member">Write</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write</parametername>
</parameternamelist>
<parameterdescription>
<para>The formatted string to write.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Game/OS/Extensions.cs" line="136" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="136" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Pathfinder/Game/OS/Extensions.cs" line="9" column="1" bodyfile="Pathfinder/Game/OS/Extensions.cs" bodystart="8" bodyend="141"/>
    <listofallmembers>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a3c7dc4252ef9aa625353a05831412ed6" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>GetCurrentComputer</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a15cb9803d2ecbd2a53ea93548153fa1c" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>GetExesFor</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a210838cd29e560ada42c3356f4b5f710" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>GetExesFor&lt; T &gt;</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1ac553c7d9ed908a25fcab8091f82e4e9d" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>GetModExeInterfaceFor</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a6cb7772226d053dcecf32b85fb8bf66d" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>GetModExeInterfaceFor&lt; T &gt;</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a34c0b845669d4737ea6e52a26b3af85f" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>KillAllExecutableModules</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a930f2f42ec0f47e81c0aaae7adf4dc46" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>KillExecutableModule</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a232418e0ac2f1924e45d81fb6c2c0ca1" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>KillExecutableModule</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1aa650fe7f1b31a300e7c768804839678e" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>Write</name></member>
      <member refid="class_pathfinder_1_1_game_1_1_o_s_1_1_extensions_1a5e9a84b3d11bfc05f86fe6b79ab416f5" prot="public" virt="non-virtual"><scope>Pathfinder::Game::OS::Extensions</scope><name>WriteSingle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
