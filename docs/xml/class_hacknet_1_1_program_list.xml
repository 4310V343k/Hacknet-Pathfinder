<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_hacknet_1_1_program_list" kind="class" language="C#" prot="public">
    <compoundname>Hacknet::ProgramList</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_hacknet_1_1_program_list_1abbc35d6119a4cc98fded1a2a8fdfaeca" prot="public" static="yes" mutable="no">
        <type>List&lt; string &gt;</type>
        <definition>List&lt;string&gt; Hacknet.ProgramList.programs</definition>
        <argsstring></argsstring>
        <name>programs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="864" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="864" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hacknet_1_1_program_list_1a3daaaa95d794d131230b4ba2917dc0ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>List&lt; string &gt;</type>
        <definition>static List&lt;string&gt; Hacknet.ProgramList.getExeList</definition>
        <argsstring>(OS os)</argsstring>
        <name>getExeList</name>
        <param>
          <type><ref refid="class_hacknet_1_1_o_s" kindref="compound">OS</ref></type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_program_list_1a049e8af40a473565d38ca44faa67ef76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Hacknet.ProgramList.init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="867" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Pathfinder/Docs/Hacknet.cs" line="863" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="862" bodyend="868"/>
    <listofallmembers>
      <member refid="class_hacknet_1_1_program_list_1a3daaaa95d794d131230b4ba2917dc0ae" prot="public" virt="non-virtual"><scope>Hacknet::ProgramList</scope><name>getExeList</name></member>
      <member refid="class_hacknet_1_1_program_list_1a049e8af40a473565d38ca44faa67ef76" prot="public" virt="non-virtual"><scope>Hacknet::ProgramList</scope><name>init</name></member>
      <member refid="class_hacknet_1_1_program_list_1abbc35d6119a4cc98fded1a2a8fdfaeca" prot="public" virt="non-virtual"><scope>Hacknet::ProgramList</scope><name>programs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
