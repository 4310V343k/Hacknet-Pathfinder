<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_hacknet_1_1_computer" kind="class" language="C#" prot="public">
    <compoundname>Hacknet::Computer</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ad0d64b38648727471f0dfd000f99a05b" prot="public" static="no" mutable="no">
        <type>const byte</type>
        <definition>const byte Hacknet.Computer.CORPORATE</definition>
        <argsstring></argsstring>
        <name>CORPORATE</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="381" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ac6eeb4e5ad2492a567db974bb3dcd959" prot="public" static="no" mutable="no">
        <type>const byte</type>
        <definition>const byte Hacknet.Computer.EMPTY</definition>
        <argsstring></argsstring>
        <name>EMPTY</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="386" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1abcf08d966faefc880456f3cc225ea2a2" prot="public" static="no" mutable="no">
        <type>const byte</type>
        <definition>const byte Hacknet.Computer.SERVER</definition>
        <argsstring></argsstring>
        <name>SERVER</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="387" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a49f8711ffd02fea8847901b7faffb1e4" prot="public" static="no" mutable="no">
        <type>const byte</type>
        <definition>const byte Hacknet.Computer.HOME</definition>
        <argsstring></argsstring>
        <name>HOME</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="388" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a786de849b52e438fceb18d52876d46e1" prot="public" static="no" mutable="no">
        <type>const byte</type>
        <definition>const byte Hacknet.Computer.EOS</definition>
        <argsstring></argsstring>
        <name>EOS</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="389" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ae0cdc837465a311513feb2e27afc449c" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.proxyOverloadTicks</definition>
        <argsstring></argsstring>
        <name>proxyOverloadTicks</name>
        <initializer>= 0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="391" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a7a3ff6f4442bad9ec0a8c80ef9c9d151" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.highlightFlashTime</definition>
        <argsstring></argsstring>
        <name>highlightFlashTime</name>
        <initializer>= 0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="392" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a8260bb1fbd119fa2d9b371f5df631ce3" prot="public" static="no" mutable="no">
        <type>byte</type>
        <definition>byte Hacknet.Computer.type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="393" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ad168426bdc834897854102ae114cee8e" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.adminPass</definition>
        <argsstring></argsstring>
        <name>adminPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="394" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a01045e3da061a37b1356afa039c911df" prot="public" static="no" mutable="no">
        <type>List&lt; <ref refid="class_hacknet_1_1_daemon" kindref="compound">Daemon</ref> &gt;</type>
        <definition>List&lt;Daemon&gt; Hacknet.Computer.daemons</definition>
        <argsstring></argsstring>
        <name>daemons</name>
        <briefdescription>
<para>The active Daemons on <ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="398" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a96a74b3217dc60058e7cee051171025c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.AllowsDefaultBootModule</definition>
        <argsstring></argsstring>
        <name>AllowsDefaultBootModule</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="399" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a423981fcb8aafc8266d59a977e9bc304" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.hasProxy</definition>
        <argsstring></argsstring>
        <name>hasProxy</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="400" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a36423ed9afee568c5b052da769b80f51" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.startingOverloadTicks</definition>
        <argsstring></argsstring>
        <name>startingOverloadTicks</name>
        <initializer>= -1f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="401" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a8f271f468efea54efe2839663fc33206" prot="public" static="no" mutable="no">
        <type><ref refid="class_hacknet_1_1_firewall" kindref="compound">Firewall</ref></type>
        <definition>Firewall Hacknet.Computer.firewall</definition>
        <argsstring></argsstring>
        <name>firewall</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>The firewall for <ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="405" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1afae433fcb4e1ee1e52a3e2a0fc51dbc2" prot="public" static="no" mutable="no">
        <type><ref refid="class_hacknet_1_1_shell_exe" kindref="compound">ShellExe</ref></type>
        <definition>ShellExe Hacknet.Computer.reportingShell</definition>
        <argsstring></argsstring>
        <name>reportingShell</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>The reporting shell for <ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="409" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ab0fec92617b416b5f373affb3d6da43a" prot="public" static="no" mutable="no">
        <type>ExternalCounterpart</type>
        <definition>ExternalCounterpart Hacknet.Computer.externalCounterpart</definition>
        <argsstring></argsstring>
        <name>externalCounterpart</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="410" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a7cd2f38936a27d4312e6765826b5c22c" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.attatchedDeviceIDs</definition>
        <argsstring></argsstring>
        <name>attatchedDeviceIDs</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="411" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ae86b2645da52df1d1ae05efc4a42cc30" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.firewallAnalysisInProgress</definition>
        <argsstring></argsstring>
        <name>firewallAnalysisInProgress</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="412" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ac0991d84c1fda9d4ad23a92cc03cf2ef" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.HasTracker</definition>
        <argsstring></argsstring>
        <name>HasTracker</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="413" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a77af9f3cca0a3f00e89ddcde76733d22" prot="public" static="no" mutable="no">
        <type>Administrator</type>
        <definition>Administrator Hacknet.Computer.admin</definition>
        <argsstring></argsstring>
        <name>admin</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="414" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a407b9edbd02d3441ea906632bec51ac0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.proxyActive</definition>
        <argsstring></argsstring>
        <name>proxyActive</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="415" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a976ad4a112ea12798cfeee1d8028978b" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.icon</definition>
        <argsstring></argsstring>
        <name>icon</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="416" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a37f41459206aa29671ce4bbab07e0fda" prot="public" static="no" mutable="no">
        <type>UserDetail</type>
        <definition>UserDetail Hacknet.Computer.currentUser</definition>
        <argsstring></argsstring>
        <name>currentUser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="417" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ada9a03f61b77253c6792e7a0535d044c" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="418" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a59e4297e6a16061c2459f3ec376676ca" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.idName</definition>
        <argsstring></argsstring>
        <name>idName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="419" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a4ecbd8c4704cb68518d0429976153332" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.ip</definition>
        <argsstring></argsstring>
        <name>ip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="420" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a26bd2a3c60a24348e1caade919e4acdc" prot="public" static="no" mutable="no">
        <type>Vector2</type>
        <definition>Vector2 Hacknet.Computer.location</definition>
        <argsstring></argsstring>
        <name>location</name>
        <briefdescription>
<para>The <ref refid="class_hacknet_1_1_network_map" kindref="compound">NetworkMap</ref> location of the <ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="424" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ac2dd6b08f34598c8e6a0b8e8aa8a36cf" prot="public" static="no" mutable="no">
        <type><ref refid="class_hacknet_1_1_file_system" kindref="compound">FileSystem</ref></type>
        <definition>FileSystem Hacknet.Computer.files</definition>
        <argsstring></argsstring>
        <name>files</name>
        <briefdescription>
<para>The <ref refid="class_hacknet_1_1_file_system" kindref="compound">FileSystem</ref> for <ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="428" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a3f9e1e5d5ff8d3b1a0a951a3b9a3c478" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Hacknet.Computer.securityLevel</definition>
        <argsstring></argsstring>
        <name>securityLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="429" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a2262357689a93e77d97cb4384fc8839d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.traceTime</definition>
        <argsstring></argsstring>
        <name>traceTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="430" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ad8360891eb73311ac6fe3184a98650ea" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Hacknet.Computer.portsNeededForCrack</definition>
        <argsstring></argsstring>
        <name>portsNeededForCrack</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="431" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ac2d424860cd7e1333e22dc28250eb726" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string Hacknet.Computer.adminIP</definition>
        <argsstring></argsstring>
        <name>adminIP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="432" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1adcfc7e82b7308530873e24bdec129162" prot="public" static="no" mutable="no">
        <type>List&lt; UserDetail &gt;</type>
        <definition>List&lt;UserDetail&gt; Hacknet.Computer.users</definition>
        <argsstring></argsstring>
        <name>users</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="433" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a9a393d8f41ce8280fd883dc47d8b0b98" prot="public" static="no" mutable="no">
        <type>List&lt; int &gt;</type>
        <definition>List&lt;int&gt; Hacknet.Computer.links</definition>
        <argsstring></argsstring>
        <name>links</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="434" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a10a254e8e8884b5cee7e0213d8ae3836" prot="public" static="no" mutable="no">
        <type>List&lt; int &gt;</type>
        <definition>List&lt;int&gt; Hacknet.Computer.ports</definition>
        <argsstring></argsstring>
        <name>ports</name>
        <briefdescription>
<para>The ports on <ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="438" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a08cc816cfd4b6bd1b16cde8e9a51f188" prot="public" static="no" mutable="no">
        <type>List&lt; byte &gt;</type>
        <definition>List&lt;byte&gt; Hacknet.Computer.portsOpen</definition>
        <argsstring></argsstring>
        <name>portsOpen</name>
        <briefdescription>
<para>The location on ports of the opened ports. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="442" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ae8ae0242f28fbb39e72b610efd81e44b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.silent</definition>
        <argsstring></argsstring>
        <name>silent</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="443" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a6f48a5d56d178e99e5fc04245e529cf7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.disabled</definition>
        <argsstring></argsstring>
        <name>disabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="444" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a3ce5e3b3de2421957d19e323a523b486" prot="public" static="no" mutable="no">
        <type>MemoryContents</type>
        <definition>MemoryContents Hacknet.Computer.Memory</definition>
        <argsstring></argsstring>
        <name>Memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="445" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1aeb016585f0fca5e4c236f4cec0df4db2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Computer.userLoggedIn</definition>
        <argsstring></argsstring>
        <name>userLoggedIn</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="446" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a09ad49ec97d5bcc14425410f0e91a2ed" prot="public" static="no" mutable="no">
        <type>Dictionary&lt; int, int &gt;</type>
        <definition>Dictionary&lt;int, int&gt; Hacknet.Computer.PortRemapping</definition>
        <argsstring></argsstring>
        <name>PortRemapping</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="447" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ab7db3dbcad72e00e23eb85a424104610" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.BASE_PROXY_TICKS</definition>
        <argsstring></argsstring>
        <name>BASE_PROXY_TICKS</name>
        <initializer>= 30f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="382" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a7d7c6b883fb991a5ab52830ee6a5d674" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.BASE_REBOOT_TIME</definition>
        <argsstring></argsstring>
        <name>BASE_REBOOT_TIME</name>
        <initializer>= 10.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="383" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1ac4d8619e95be57430ce474415873325d" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.BASE_BOOT_TIME</definition>
        <argsstring></argsstring>
        <name>BASE_BOOT_TIME</name>
        <initializer>= <ref refid="class_hacknet_1_1_settings_1a3906e4113caf2f127095149556fcc8b7" kindref="member">Settings.isConventionDemo</ref> ? 15f : 25.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="384" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hacknet_1_1_computer_1a5329978eae49227d208fc3ba82fe3412" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float Hacknet.Computer.BASE_TRACE_TIME</definition>
        <argsstring></argsstring>
        <name>BASE_TRACE_TIME</name>
        <initializer>= 15f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="385" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="385" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hacknet_1_1_computer_1af583c462b218ea5b9fbcf00d22e475a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Computer.Computer</definition>
        <argsstring>(string compName, string compIP, Vector2 compLocation, int seclevel, byte compType)</argsstring>
        <name>Computer</name>
        <param>
          <type>string</type>
          <declname>compName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>compIP</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>compLocation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seclevel</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>compType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a97a8d325dbc66ed4d300104bda492c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Computer.Computer</definition>
        <argsstring>(string compName, string compIP, Vector2 compLocation, int seclevel)</argsstring>
        <name>Computer</name>
        <param>
          <type>string</type>
          <declname>compName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>compIP</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>compLocation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seclevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a9e34c979eb19ed2bad723af11aee6f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Computer.Computer</definition>
        <argsstring>(string compName, string compIP, Vector2 compLocation, int seclevel, byte compType, OS opSystem)</argsstring>
        <name>Computer</name>
        <param>
          <type>string</type>
          <declname>compName</declname>
        </param>
        <param>
          <type>string</type>
          <declname>compIP</declname>
        </param>
        <param>
          <type>Vector2</type>
          <declname>compLocation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seclevel</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>compType</declname>
        </param>
        <param>
          <type><ref refid="class_hacknet_1_1_o_s" kindref="compound">OS</ref></type>
          <declname>opSystem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a356fc67a26f34f35ca229385eadf6266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addFirewall</definition>
        <argsstring>(int level)</argsstring>
        <name>addFirewall</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1aa30e5250f07a93ec14cf5cc4d38e89d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addFirewall</definition>
        <argsstring>(int level, string solution)</argsstring>
        <name>addFirewall</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>string</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a0fc172f9fe134dd4d831bba594e3e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addFirewall</definition>
        <argsstring>(int level, string solution, float additionalTime)</argsstring>
        <name>addFirewall</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>string</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>additionalTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1aeaa4e750c82ac8f0ed0d8ff68e39ed19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addMultiplayerTargetFile</definition>
        <argsstring>()</argsstring>
        <name>addMultiplayerTargetFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="462" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a3386afd6779f7cad1aabf33665c393fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addNewUser</definition>
        <argsstring>(string ipFrom, string name, string pass, byte type)</argsstring>
        <name>addNewUser</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>pass</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1aa34495ac9c62bb02b98735e9d05cd198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addNewUser</definition>
        <argsstring>(string ipFrom, UserDetail usr)</argsstring>
        <name>addNewUser</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>UserDetail</type>
          <declname>usr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="464" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a86acec5c1ab53f6ab13f3d14fe71cbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.addProxy</definition>
        <argsstring>(float time)</argsstring>
        <name>addProxy</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a3e8efac2c952b64bdc2f96838114c1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.bootupTick</definition>
        <argsstring>(float t)</argsstring>
        <name>bootupTick</name>
        <param>
          <type>float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a1a8bdda8df7b1872387372cdfb45f4a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.canCopyFile</definition>
        <argsstring>(string ipFrom, string name)</argsstring>
        <name>canCopyFile</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ab368d755baea99d35789e766652efc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.canReadFile</definition>
        <argsstring>(string ipFrom, FileEntry f, int index)</argsstring>
        <name>canReadFile</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type><ref refid="class_hacknet_1_1_file_entry" kindref="compound">FileEntry</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a29fca3f9265ae2ff94a50c120ef441e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.closeCDTray</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>closeCDTray</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="469" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a40ea4ed1dccbf4032f29036bc53eb3ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.closePort</definition>
        <argsstring>(int portNum, string ipFrom)</argsstring>
        <name>closePort</name>
        <param>
          <type>int</type>
          <declname>portNum</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ab6da5b9f0d55d620716195b5b457b752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.connect</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>connect</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a7dfd74eba1565a055eabfd1bfe55a649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.crash</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>crash</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1adba7ed667063f708578fea2e61bb26cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.deleteFile</definition>
        <argsstring>(string ipFrom, string name, List&lt; int &gt; folderPath)</argsstring>
        <name>deleteFile</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>folderPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ad23ff2d5afc582ac2c4855fb713e7263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.disconnecting</definition>
        <argsstring>(string ipFrom, bool externalDisconnectToo=true)</argsstring>
        <name>disconnecting</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>externalDisconnectToo</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1aab786bf2be3547f4a8cc0ada6f3ef352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.forkBombClients</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>forkBombClients</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ad8d05841a7ec4d2cd226fb6747398cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hacknet.Computer.generateFileData</definition>
        <argsstring>(int seed)</argsstring>
        <name>generateFileData</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a3d82c52090a0c477f4f186a0003fe5a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hacknet.Computer.generateFileName</definition>
        <argsstring>(int seed)</argsstring>
        <name>generateFileName</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a45c706bc2d84c091a2074a757d0a75d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hacknet.Computer.generateFolderName</definition>
        <argsstring>(int seed)</argsstring>
        <name>generateFolderName</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a0e8d19b0f52f278d1cca61e805d2b554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_file_system" kindref="compound">FileSystem</ref></type>
        <definition>FileSystem Hacknet.Computer.generateRandomFileSystem</definition>
        <argsstring>()</argsstring>
        <name>generateRandomFileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ae895e796dd5ce22b6eef4763a26745ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hacknet.Computer.GetCodePortNumberFromDisplayPort</definition>
        <argsstring>(int displayPort)</argsstring>
        <name>GetCodePortNumberFromDisplayPort</name>
        <param>
          <type>int</type>
          <declname>displayPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a254e617272f9e939a50faa3537d22082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_daemon" kindref="compound">Daemon</ref></type>
        <definition>Daemon Hacknet.Computer.getDaemon</definition>
        <argsstring>(Type t)</argsstring>
        <name>getDaemon</name>
        <param>
          <type>Type</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a4bfe88110bfd31f68e1f747e480bf3ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hacknet.Computer.GetDisplayPortNumberFromCodePort</definition>
        <argsstring>(int codePort)</argsstring>
        <name>GetDisplayPortNumberFromCodePort</name>
        <param>
          <type>int</type>
          <declname>codePort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ab279f5fce80cab7a46ab1b9350b70372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_folder" kindref="compound">Folder</ref></type>
        <definition>Folder Hacknet.Computer.getFolderFromPath</definition>
        <argsstring>(string path, bool createFoldersThatDontExist=false)</argsstring>
        <name>getFolderFromPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createFoldersThatDontExist</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a2b0598e7b6c53e8b03ec04a60a6caa14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>List&lt; int &gt;</type>
        <definition>List&lt;int&gt; Hacknet.Computer.getFolderPath</definition>
        <argsstring>(string path, bool createFoldersThatDontExist=false)</argsstring>
        <name>getFolderPath</name>
        <param>
          <type>string</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createFoldersThatDontExist</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a9aa088de7eef516e09e6623534477c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hacknet.Computer.getSaveString</definition>
        <argsstring>()</argsstring>
        <name>getSaveString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a51abf30019551254176da332ee740ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector2</type>
        <definition>Vector2 Hacknet.Computer.getScreenSpacePosition</definition>
        <argsstring>()</argsstring>
        <name>getScreenSpacePosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a038959fbd4c4d8b5af58b3885c137c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hacknet.Computer.getTooltipString</definition>
        <argsstring>()</argsstring>
        <name>getTooltipString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1af31877c4f760c23ecf9cbbd702b02b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.giveAdmin</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>giveAdmin</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ad38485b2e113c15efe2589c4bf8b509e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.hostileActionTaken</definition>
        <argsstring>()</argsstring>
        <name>hostileActionTaken</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a0af8f2c48d7b87e00538c9c2137b3bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.initDaemons</definition>
        <argsstring>()</argsstring>
        <name>initDaemons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="490" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a777ef3620d0b012261ac6c1163c198b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.isPortOpen</definition>
        <argsstring>(int portNum)</argsstring>
        <name>isPortOpen</name>
        <param>
          <type>int</type>
          <declname>portNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a2ace8620aef24863e07dddaef66c4b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.log</definition>
        <argsstring>(string message)</argsstring>
        <name>log</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1abedab02a0b69f1a43b8b2561476befab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Hacknet.Computer.login</definition>
        <argsstring>(string username, string password, byte type=1)</argsstring>
        <name>login</name>
        <param>
          <type>string</type>
          <declname>username</declname>
        </param>
        <param>
          <type>string</type>
          <declname>password</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>type</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a498951cff3d143c0d52fbce3d8952509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.makeFile</definition>
        <argsstring>(string ipFrom, string name, string data, List&lt; int &gt; folderPath, bool isUpload=false)</argsstring>
        <name>makeFile</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>folderPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isUpload</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a5289c6135eda654c894008fd93967a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.makeFolder</definition>
        <argsstring>(string ipFrom, string name, List&lt; int &gt; folderPath)</argsstring>
        <name>makeFolder</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>folderPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ac51a9ce80c908724a5e25a2ef21e05f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.moveFile</definition>
        <argsstring>(string ipFrom, string name, string newName, List&lt; int &gt; folderPath, List&lt; int &gt; destFolderPath)</argsstring>
        <name>moveFile</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>string</type>
          <declname>newName</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>folderPath</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>destFolderPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a5e525ffe2d7b32636e3d23a6a770d343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.openCDTray</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>openCDTray</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="497" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a21948e4400454090d3fd0c539d66a762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.openPort</definition>
        <argsstring>(int portNum, string ipFrom)</argsstring>
        <name>openPort</name>
        <param>
          <type>int</type>
          <declname>portNum</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a30b9cfc92055e63950a03446f8521ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.openPortsForSecurityLevel</definition>
        <argsstring>(int security)</argsstring>
        <name>openPortsForSecurityLevel</name>
        <param>
          <type>int</type>
          <declname>security</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1ad98d44b1e71a06c8d2ead45db1a95a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Computer.PlayerHasAdminPermissions</definition>
        <argsstring>()</argsstring>
        <name>PlayerHasAdminPermissions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a5048d80e7e99cb08b3abb60e75e3c89a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.reboot</definition>
        <argsstring>(string ipFrom)</argsstring>
        <name>reboot</name>
        <param>
          <type>string</type>
          <declname>ipFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1acefef3886ee6f817bf1f3b520191a130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.sendNetworkMessage</definition>
        <argsstring>(string s)</argsstring>
        <name>sendNetworkMessage</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a1f777695982ef5173dd106fb08a268b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Computer.setAdminPassword</definition>
        <argsstring>(string newPass)</argsstring>
        <name>setAdminPassword</name>
        <param>
          <type>string</type>
          <declname>newPass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a59a73152ffaa0b164af1884d8e88f0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override string</type>
        <definition>override string Hacknet.Computer.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="504" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hacknet_1_1_computer_1aa495bb66dd34701eeb5747b50d324375" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Hacknet.Computer.generateBinaryString</definition>
        <argsstring>(int length)</argsstring>
        <name>generateBinaryString</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a4109465b3924777123f3aa956ee58d2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>static string Hacknet.Computer.generateBinaryString</definition>
        <argsstring>(int length, MSRandom rng)</argsstring>
        <name>generateBinaryString</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>MSRandom</type>
          <declname>rng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="454" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a1450696f9122b6e0847eec1c8e1049ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_folder" kindref="compound">Folder</ref></type>
        <definition>static Folder Hacknet.Computer.getFolderAtDepth</definition>
        <argsstring>(Computer c, int depth, List&lt; int &gt; path)</argsstring>
        <name>getFolderAtDepth</name>
        <param>
          <type><ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>List&lt; int &gt;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a7265761af0b80f2e662c26484ced863f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref></type>
        <definition>static Computer Hacknet.Computer.load</definition>
        <argsstring>(XmlReader reader, OS os)</argsstring>
        <name>load</name>
        <param>
          <type>XmlReader</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="class_hacknet_1_1_o_s" kindref="compound">OS</ref></type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="456" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_computer_1a71c4a01cadc52c0fe067933d9ba121f3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_computer" kindref="compound">Computer</ref></type>
        <definition>static Computer Hacknet.Computer.loadFromFile</definition>
        <argsstring>(string filename)</argsstring>
        <name>loadFromFile</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="457" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="66">
        <label>Framework</label>
      </node>
      <node id="61">
        <label>Hacknet.DisplayModule</label>
        <link refid="class_hacknet_1_1_display_module"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>LastDisplayedFileFolder</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>Hacknet.Computer</label>
        <link refid="class_hacknet_1_1_computer"/>
        <childnode refid="53" relation="usage">
          <edgelabel>reportingShell</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>files</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>firewall</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>GameScreen</label>
        <link refid="class_hacknet_1_1_game_screen"/>
      </node>
      <node id="55">
        <label>Module</label>
        <link refid="class_hacknet_1_1_module"/>
        <childnode refid="56" relation="usage">
          <edgelabel>os</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>bounds</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>CoreModule</label>
        <link refid="class_hacknet_1_1_core_module"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>ExeModule</label>
        <link refid="class_hacknet_1_1_exe_module"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>Hacknet.NetworkMap</label>
        <link refid="class_hacknet_1_1_network_map"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>mailServer</edgelabel>
          <edgelabel>academicDatabase</edgelabel>
          <edgelabel>lastAddedNode</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>Hacknet.ShellExe</label>
        <link refid="class_hacknet_1_1_shell_exe"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>Hacknet.Firewall</label>
        <link refid="class_hacknet_1_1_firewall"/>
      </node>
      <node id="67">
        <label>Hacknet.FileSystem</label>
        <link refid="class_hacknet_1_1_file_system"/>
        <childnode refid="62" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>Hacknet.Terminal</label>
        <link refid="class_hacknet_1_1_terminal"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>Hacknet.CrashModule</label>
        <link refid="class_hacknet_1_1_crash_module"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>FileType</label>
        <link refid="interface_hacknet_1_1_file_type"/>
      </node>
      <node id="56">
        <label>Hacknet.OS</label>
        <link refid="class_hacknet_1_1_o_s"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>ram</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>crashModule</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>display</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>terminal</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>netMap</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>opponentComputer</edgelabel>
          <edgelabel>connectedComp</edgelabel>
          <edgelabel>thisComputer</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>fullscreen</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>currentInstance</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>Hacknet.Folder</label>
        <link refid="class_hacknet_1_1_folder"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>Hacknet.RamModule</label>
        <link refid="class_hacknet_1_1_ram_module"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Pathfinder/Docs/Hacknet.cs" line="380" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="379" bodyend="505"/>
    <listofallmembers>
      <member refid="class_hacknet_1_1_computer_1a356fc67a26f34f35ca229385eadf6266" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addFirewall</name></member>
      <member refid="class_hacknet_1_1_computer_1aa30e5250f07a93ec14cf5cc4d38e89d6" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addFirewall</name></member>
      <member refid="class_hacknet_1_1_computer_1a0fc172f9fe134dd4d831bba594e3e3d4" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addFirewall</name></member>
      <member refid="class_hacknet_1_1_computer_1aeaa4e750c82ac8f0ed0d8ff68e39ed19" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addMultiplayerTargetFile</name></member>
      <member refid="class_hacknet_1_1_computer_1a3386afd6779f7cad1aabf33665c393fc" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addNewUser</name></member>
      <member refid="class_hacknet_1_1_computer_1aa34495ac9c62bb02b98735e9d05cd198" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addNewUser</name></member>
      <member refid="class_hacknet_1_1_computer_1a86acec5c1ab53f6ab13f3d14fe71cbc9" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>addProxy</name></member>
      <member refid="class_hacknet_1_1_computer_1a77af9f3cca0a3f00e89ddcde76733d22" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>admin</name></member>
      <member refid="class_hacknet_1_1_computer_1ac2d424860cd7e1333e22dc28250eb726" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>adminIP</name></member>
      <member refid="class_hacknet_1_1_computer_1ad168426bdc834897854102ae114cee8e" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>adminPass</name></member>
      <member refid="class_hacknet_1_1_computer_1a96a74b3217dc60058e7cee051171025c" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>AllowsDefaultBootModule</name></member>
      <member refid="class_hacknet_1_1_computer_1a7cd2f38936a27d4312e6765826b5c22c" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>attatchedDeviceIDs</name></member>
      <member refid="class_hacknet_1_1_computer_1ac4d8619e95be57430ce474415873325d" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>BASE_BOOT_TIME</name></member>
      <member refid="class_hacknet_1_1_computer_1ab7db3dbcad72e00e23eb85a424104610" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>BASE_PROXY_TICKS</name></member>
      <member refid="class_hacknet_1_1_computer_1a7d7c6b883fb991a5ab52830ee6a5d674" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>BASE_REBOOT_TIME</name></member>
      <member refid="class_hacknet_1_1_computer_1a5329978eae49227d208fc3ba82fe3412" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>BASE_TRACE_TIME</name></member>
      <member refid="class_hacknet_1_1_computer_1a3e8efac2c952b64bdc2f96838114c1f9" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>bootupTick</name></member>
      <member refid="class_hacknet_1_1_computer_1a1a8bdda8df7b1872387372cdfb45f4a3" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>canCopyFile</name></member>
      <member refid="class_hacknet_1_1_computer_1ab368d755baea99d35789e766652efc7b" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>canReadFile</name></member>
      <member refid="class_hacknet_1_1_computer_1a29fca3f9265ae2ff94a50c120ef441e4" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>closeCDTray</name></member>
      <member refid="class_hacknet_1_1_computer_1a40ea4ed1dccbf4032f29036bc53eb3ee" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>closePort</name></member>
      <member refid="class_hacknet_1_1_computer_1af583c462b218ea5b9fbcf00d22e475a1" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>Computer</name></member>
      <member refid="class_hacknet_1_1_computer_1a97a8d325dbc66ed4d300104bda492c3d" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>Computer</name></member>
      <member refid="class_hacknet_1_1_computer_1a9e34c979eb19ed2bad723af11aee6f08" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>Computer</name></member>
      <member refid="class_hacknet_1_1_computer_1ab6da5b9f0d55d620716195b5b457b752" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>connect</name></member>
      <member refid="class_hacknet_1_1_computer_1ad0d64b38648727471f0dfd000f99a05b" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>CORPORATE</name></member>
      <member refid="class_hacknet_1_1_computer_1a7dfd74eba1565a055eabfd1bfe55a649" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>crash</name></member>
      <member refid="class_hacknet_1_1_computer_1a37f41459206aa29671ce4bbab07e0fda" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>currentUser</name></member>
      <member refid="class_hacknet_1_1_computer_1a01045e3da061a37b1356afa039c911df" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>daemons</name></member>
      <member refid="class_hacknet_1_1_computer_1adba7ed667063f708578fea2e61bb26cb" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>deleteFile</name></member>
      <member refid="class_hacknet_1_1_computer_1a6f48a5d56d178e99e5fc04245e529cf7" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>disabled</name></member>
      <member refid="class_hacknet_1_1_computer_1ad23ff2d5afc582ac2c4855fb713e7263" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>disconnecting</name></member>
      <member refid="class_hacknet_1_1_computer_1ac6eeb4e5ad2492a567db974bb3dcd959" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>EMPTY</name></member>
      <member refid="class_hacknet_1_1_computer_1a786de849b52e438fceb18d52876d46e1" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>EOS</name></member>
      <member refid="class_hacknet_1_1_computer_1ab0fec92617b416b5f373affb3d6da43a" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>externalCounterpart</name></member>
      <member refid="class_hacknet_1_1_computer_1ac2dd6b08f34598c8e6a0b8e8aa8a36cf" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>files</name></member>
      <member refid="class_hacknet_1_1_computer_1a8f271f468efea54efe2839663fc33206" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>firewall</name></member>
      <member refid="class_hacknet_1_1_computer_1ae86b2645da52df1d1ae05efc4a42cc30" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>firewallAnalysisInProgress</name></member>
      <member refid="class_hacknet_1_1_computer_1aab786bf2be3547f4a8cc0ada6f3ef352" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>forkBombClients</name></member>
      <member refid="class_hacknet_1_1_computer_1aa495bb66dd34701eeb5747b50d324375" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>generateBinaryString</name></member>
      <member refid="class_hacknet_1_1_computer_1a4109465b3924777123f3aa956ee58d2c" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>generateBinaryString</name></member>
      <member refid="class_hacknet_1_1_computer_1ad8d05841a7ec4d2cd226fb6747398cc4" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>generateFileData</name></member>
      <member refid="class_hacknet_1_1_computer_1a3d82c52090a0c477f4f186a0003fe5a2" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>generateFileName</name></member>
      <member refid="class_hacknet_1_1_computer_1a45c706bc2d84c091a2074a757d0a75d0" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>generateFolderName</name></member>
      <member refid="class_hacknet_1_1_computer_1a0e8d19b0f52f278d1cca61e805d2b554" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>generateRandomFileSystem</name></member>
      <member refid="class_hacknet_1_1_computer_1ae895e796dd5ce22b6eef4763a26745ee" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>GetCodePortNumberFromDisplayPort</name></member>
      <member refid="class_hacknet_1_1_computer_1a254e617272f9e939a50faa3537d22082" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getDaemon</name></member>
      <member refid="class_hacknet_1_1_computer_1a4bfe88110bfd31f68e1f747e480bf3ab" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>GetDisplayPortNumberFromCodePort</name></member>
      <member refid="class_hacknet_1_1_computer_1a1450696f9122b6e0847eec1c8e1049ae" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getFolderAtDepth</name></member>
      <member refid="class_hacknet_1_1_computer_1ab279f5fce80cab7a46ab1b9350b70372" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getFolderFromPath</name></member>
      <member refid="class_hacknet_1_1_computer_1a2b0598e7b6c53e8b03ec04a60a6caa14" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getFolderPath</name></member>
      <member refid="class_hacknet_1_1_computer_1a9aa088de7eef516e09e6623534477c31" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getSaveString</name></member>
      <member refid="class_hacknet_1_1_computer_1a51abf30019551254176da332ee740ef6" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getScreenSpacePosition</name></member>
      <member refid="class_hacknet_1_1_computer_1a038959fbd4c4d8b5af58b3885c137c27" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>getTooltipString</name></member>
      <member refid="class_hacknet_1_1_computer_1af31877c4f760c23ecf9cbbd702b02b6e" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>giveAdmin</name></member>
      <member refid="class_hacknet_1_1_computer_1a423981fcb8aafc8266d59a977e9bc304" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>hasProxy</name></member>
      <member refid="class_hacknet_1_1_computer_1ac0991d84c1fda9d4ad23a92cc03cf2ef" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>HasTracker</name></member>
      <member refid="class_hacknet_1_1_computer_1a7a3ff6f4442bad9ec0a8c80ef9c9d151" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>highlightFlashTime</name></member>
      <member refid="class_hacknet_1_1_computer_1a49f8711ffd02fea8847901b7faffb1e4" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>HOME</name></member>
      <member refid="class_hacknet_1_1_computer_1ad38485b2e113c15efe2589c4bf8b509e" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>hostileActionTaken</name></member>
      <member refid="class_hacknet_1_1_computer_1a976ad4a112ea12798cfeee1d8028978b" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>icon</name></member>
      <member refid="class_hacknet_1_1_computer_1a59e4297e6a16061c2459f3ec376676ca" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>idName</name></member>
      <member refid="class_hacknet_1_1_computer_1a0af8f2c48d7b87e00538c9c2137b3bbc" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>initDaemons</name></member>
      <member refid="class_hacknet_1_1_computer_1a4ecbd8c4704cb68518d0429976153332" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>ip</name></member>
      <member refid="class_hacknet_1_1_computer_1a777ef3620d0b012261ac6c1163c198b3" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>isPortOpen</name></member>
      <member refid="class_hacknet_1_1_computer_1a9a393d8f41ce8280fd883dc47d8b0b98" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>links</name></member>
      <member refid="class_hacknet_1_1_computer_1a7265761af0b80f2e662c26484ced863f" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>load</name></member>
      <member refid="class_hacknet_1_1_computer_1a71c4a01cadc52c0fe067933d9ba121f3" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>loadFromFile</name></member>
      <member refid="class_hacknet_1_1_computer_1a26bd2a3c60a24348e1caade919e4acdc" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>location</name></member>
      <member refid="class_hacknet_1_1_computer_1a2ace8620aef24863e07dddaef66c4b87" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>log</name></member>
      <member refid="class_hacknet_1_1_computer_1abedab02a0b69f1a43b8b2561476befab" prot="public" virt="virtual"><scope>Hacknet::Computer</scope><name>login</name></member>
      <member refid="class_hacknet_1_1_computer_1a498951cff3d143c0d52fbce3d8952509" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>makeFile</name></member>
      <member refid="class_hacknet_1_1_computer_1a5289c6135eda654c894008fd93967a10" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>makeFolder</name></member>
      <member refid="class_hacknet_1_1_computer_1a3ce5e3b3de2421957d19e323a523b486" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>Memory</name></member>
      <member refid="class_hacknet_1_1_computer_1ac51a9ce80c908724a5e25a2ef21e05f6" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>moveFile</name></member>
      <member refid="class_hacknet_1_1_computer_1ada9a03f61b77253c6792e7a0535d044c" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>name</name></member>
      <member refid="class_hacknet_1_1_computer_1a5e525ffe2d7b32636e3d23a6a770d343" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>openCDTray</name></member>
      <member refid="class_hacknet_1_1_computer_1a21948e4400454090d3fd0c539d66a762" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>openPort</name></member>
      <member refid="class_hacknet_1_1_computer_1a30b9cfc92055e63950a03446f8521ded" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>openPortsForSecurityLevel</name></member>
      <member refid="class_hacknet_1_1_computer_1ad98d44b1e71a06c8d2ead45db1a95a77" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>PlayerHasAdminPermissions</name></member>
      <member refid="class_hacknet_1_1_computer_1a09ad49ec97d5bcc14425410f0e91a2ed" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>PortRemapping</name></member>
      <member refid="class_hacknet_1_1_computer_1a10a254e8e8884b5cee7e0213d8ae3836" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>ports</name></member>
      <member refid="class_hacknet_1_1_computer_1ad8360891eb73311ac6fe3184a98650ea" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>portsNeededForCrack</name></member>
      <member refid="class_hacknet_1_1_computer_1a08cc816cfd4b6bd1b16cde8e9a51f188" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>portsOpen</name></member>
      <member refid="class_hacknet_1_1_computer_1a407b9edbd02d3441ea906632bec51ac0" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>proxyActive</name></member>
      <member refid="class_hacknet_1_1_computer_1ae0cdc837465a311513feb2e27afc449c" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>proxyOverloadTicks</name></member>
      <member refid="class_hacknet_1_1_computer_1a5048d80e7e99cb08b3abb60e75e3c89a" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>reboot</name></member>
      <member refid="class_hacknet_1_1_computer_1afae433fcb4e1ee1e52a3e2a0fc51dbc2" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>reportingShell</name></member>
      <member refid="class_hacknet_1_1_computer_1a3f9e1e5d5ff8d3b1a0a951a3b9a3c478" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>securityLevel</name></member>
      <member refid="class_hacknet_1_1_computer_1acefef3886ee6f817bf1f3b520191a130" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>sendNetworkMessage</name></member>
      <member refid="class_hacknet_1_1_computer_1abcf08d966faefc880456f3cc225ea2a2" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>SERVER</name></member>
      <member refid="class_hacknet_1_1_computer_1a1f777695982ef5173dd106fb08a268b8" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>setAdminPassword</name></member>
      <member refid="class_hacknet_1_1_computer_1ae8ae0242f28fbb39e72b610efd81e44b" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>silent</name></member>
      <member refid="class_hacknet_1_1_computer_1a36423ed9afee568c5b052da769b80f51" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>startingOverloadTicks</name></member>
      <member refid="class_hacknet_1_1_computer_1a59a73152ffaa0b164af1884d8e88f0a5" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>ToString</name></member>
      <member refid="class_hacknet_1_1_computer_1a2262357689a93e77d97cb4384fc8839d" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>traceTime</name></member>
      <member refid="class_hacknet_1_1_computer_1a8260bb1fbd119fa2d9b371f5df631ce3" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>type</name></member>
      <member refid="class_hacknet_1_1_computer_1aeb016585f0fca5e4c236f4cec0df4db2" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>userLoggedIn</name></member>
      <member refid="class_hacknet_1_1_computer_1adcfc7e82b7308530873e24bdec129162" prot="public" virt="non-virtual"><scope>Hacknet::Computer</scope><name>users</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
