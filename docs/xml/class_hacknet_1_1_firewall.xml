<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_hacknet_1_1_firewall" kind="class" language="C#" prot="public">
    <compoundname>Hacknet::Firewall</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_hacknet_1_1_firewall_1aa5195de5add49161eff80186c6e8db5a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hacknet.Firewall.solved</definition>
        <argsstring></argsstring>
        <name>solved</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1111" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="1111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a8c78284bc54568681b03f4d3d7164f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Firewall.Firewall</definition>
        <argsstring>(int complexity, string solution, float additionalTime)</argsstring>
        <name>Firewall</name>
        <param>
          <type>int</type>
          <declname>complexity</declname>
        </param>
        <param>
          <type>string</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>float</type>
          <declname>additionalTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a6af381904773469086d1c274fac5bf5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Firewall.Firewall</definition>
        <argsstring>(int complexity, string solution)</argsstring>
        <name>Firewall</name>
        <param>
          <type>int</type>
          <declname>complexity</declname>
        </param>
        <param>
          <type>string</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a4f6bcf2575b494d8f0ebc8ee276d8f35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Firewall.Firewall</definition>
        <argsstring>()</argsstring>
        <name>Firewall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1aa6318d5de631c283ac5faa2dd278bece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hacknet.Firewall.Firewall</definition>
        <argsstring>(int complexity)</argsstring>
        <name>Firewall</name>
        <param>
          <type>int</type>
          <declname>complexity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1af63cd277226d7c11b6606b20747a60e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hacknet.Firewall.attemptSolve</definition>
        <argsstring>(string attempt, object os)</argsstring>
        <name>attemptSolve</name>
        <param>
          <type>string</type>
          <declname>attempt</declname>
        </param>
        <param>
          <type>object</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a6b28371082e99d0838f7f0a7f7c98b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override bool</type>
        <definition>override bool Hacknet.Firewall.Equals</definition>
        <argsstring>(object obj)</argsstring>
        <name>Equals</name>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a72b3ecaa64ece9f98c7ceba969b18778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override int</type>
        <definition>override int Hacknet.Firewall.GetHashCode</definition>
        <argsstring>()</argsstring>
        <name>GetHashCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a48296328e70d3f07bc1db57c0e27b7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hacknet.Firewall.getSaveString</definition>
        <argsstring>()</argsstring>
        <name>getSaveString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a81f0deaebf6cca0ae88a1dbb43480759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Firewall.resetSolutionProgress</definition>
        <argsstring>()</argsstring>
        <name>resetSolutionProgress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a49ea0b5390116b2791f8ce6b46f3e8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>override string</type>
        <definition>override string Hacknet.Firewall.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a9ac9438356f8b3a06573900f5de7691f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hacknet.Firewall.writeAnalyzePass</definition>
        <argsstring>(object os_object, object target_object)</argsstring>
        <name>writeAnalyzePass</name>
        <param>
          <type>object</type>
          <declname>os_object</declname>
        </param>
        <param>
          <type>object</type>
          <declname>target_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1126" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hacknet_1_1_firewall_1a767148b7492ab05ad5079d64e941727c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hacknet_1_1_firewall" kindref="compound">Firewall</ref></type>
        <definition>static Firewall Hacknet.Firewall.load</definition>
        <argsstring>(XmlReader reader)</argsstring>
        <name>load</name>
        <param>
          <type>XmlReader</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Docs/Hacknet.cs" line="1118" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Pathfinder/Docs/Hacknet.cs" line="1110" column="1" bodyfile="Pathfinder/Docs/Hacknet.cs" bodystart="1109" bodyend="1127"/>
    <listofallmembers>
      <member refid="class_hacknet_1_1_firewall_1af63cd277226d7c11b6606b20747a60e4" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>attemptSolve</name></member>
      <member refid="class_hacknet_1_1_firewall_1a6b28371082e99d0838f7f0a7f7c98b74" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>Equals</name></member>
      <member refid="class_hacknet_1_1_firewall_1a8c78284bc54568681b03f4d3d7164f18" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>Firewall</name></member>
      <member refid="class_hacknet_1_1_firewall_1a6af381904773469086d1c274fac5bf5d" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>Firewall</name></member>
      <member refid="class_hacknet_1_1_firewall_1a4f6bcf2575b494d8f0ebc8ee276d8f35" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>Firewall</name></member>
      <member refid="class_hacknet_1_1_firewall_1aa6318d5de631c283ac5faa2dd278bece" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>Firewall</name></member>
      <member refid="class_hacknet_1_1_firewall_1a72b3ecaa64ece9f98c7ceba969b18778" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>GetHashCode</name></member>
      <member refid="class_hacknet_1_1_firewall_1a48296328e70d3f07bc1db57c0e27b7dc" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>getSaveString</name></member>
      <member refid="class_hacknet_1_1_firewall_1a767148b7492ab05ad5079d64e941727c" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>load</name></member>
      <member refid="class_hacknet_1_1_firewall_1a81f0deaebf6cca0ae88a1dbb43480759" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>resetSolutionProgress</name></member>
      <member refid="class_hacknet_1_1_firewall_1aa5195de5add49161eff80186c6e8db5a" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>solved</name></member>
      <member refid="class_hacknet_1_1_firewall_1a49ea0b5390116b2791f8ce6b46f3e8cf" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>ToString</name></member>
      <member refid="class_hacknet_1_1_firewall_1a9ac9438356f8b3a06573900f5de7691f" prot="public" virt="non-virtual"><scope>Hacknet::Firewall</scope><name>writeAnalyzePass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
