<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_handler_listener_8cs" kind="file" language="C#">
    <compoundname>HandlerListener.cs</compoundname>
    <innerclass refid="class_pathfinder_1_1_internal_1_1_handler_listener" prot="public">Pathfinder::Internal::HandlerListener</innerclass>
    <innernamespace refid="namespace_pathfinder_1_1_internal">Pathfinder::Internal</innernamespace>
    <innernamespace refid="namespace_mod_options">ModOptions</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_handler_listener_8cs_1a03131dc2815b478446cf5f6173694d21" prot="public" static="no">
        <type>Pathfinder.GUI.ModOptions</type>
        <definition>using ModOptions =  Pathfinder.GUI.ModOptions</definition>
        <argsstring></argsstring>
        <name>ModOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Pathfinder/Internal/HandlerListener.cs" line="7" column="1" bodyfile="Pathfinder/Internal/HandlerListener.cs" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_system" kindref="compound">System</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_system" kindref="compound">System</ref>.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_hacknet" kindref="compound">Hacknet</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_pathfinder" kindref="compound">Pathfinder</ref>.<ref refid="namespace_pathfinder_1_1_event" kindref="compound">Event</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_pathfinder" kindref="compound">Pathfinder</ref>.<ref refid="namespace_pathfinder_1_1_game" kindref="compound">Game</ref>.<ref refid="namespace_pathfinder_1_1_game_1_1_o_s" kindref="compound">OS</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_mod_options" kindref="compound">ModOptions</ref><sp/>=<sp/><ref refid="namespace_pathfinder" kindref="compound">Pathfinder</ref>.<ref refid="namespace_pathfinder_1_1_g_u_i" kindref="compound">GUI</ref>.<ref refid="namespace_pathfinder_1_1_g_u_i_1_1_mod_options" kindref="compound">ModOptions</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_pathfinder" kindref="compound">Pathfinder</ref>.Internal</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11" refid="class_pathfinder_1_1_internal_1_1_handler_listener" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pathfinder_1_1_internal_1_1_handler_listener" kindref="compound">HandlerListener</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CommandListener(<ref refid="class_pathfinder_1_1_event_1_1_command_sent_event" kindref="compound">CommandSentEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_command" kindref="compound">Command</ref>.Handler.CommandFunc<sp/>f;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_command" kindref="compound">Command</ref>.Handler.ModCommands.TryGetValue(e[0],<sp/>out<sp/>f))</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event_1a97787d999e89e0e767f3d8961d2981fa" kindref="member">IsCancelled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_command_sent_event_1ab5531469ac72423f211f8216e710910c" kindref="member">Disconnects</ref><sp/>=<sp/>f(e.<ref refid="class_pathfinder_1_1_event_1_1_o_s_event_1ab611363273c3501ee85d3283f32b46ef" kindref="member">OS</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_command_sent_event_1a88be71dc1510de7945eeefd1c45f4537" kindref="member">Arguments</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>ex)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_o_s_event_1ab611363273c3501ee85d3283f32b46ef" kindref="member">OS</ref>.Write(</highlight><highlight class="stringliteral">&quot;Command<sp/>{0}<sp/>threw<sp/>Exception:\n<sp/><sp/><sp/><sp/>{1}(&apos;{2}&apos;)&quot;</highlight><highlight class="normal">,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_command_sent_event_1a88be71dc1510de7945eeefd1c45f4537" kindref="member">Arguments</ref>[0],<sp/>ex.GetType().FullName,<sp/>ex.Message);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DaemonLoadListener(<ref refid="class_pathfinder_1_1_event_1_1_load_computer_xml_read_event" kindref="compound">LoadComputerXmlReadEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_daemon" kindref="compound">Daemon</ref>.IInterface<sp/>i;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_load_computer_xml_read_event_1a4fdbd3e2d8b775425b1f698a568258f9" kindref="member">Reader</ref>.GetAttribute(</highlight><highlight class="stringliteral">&quot;interfaceId&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>null<sp/>&amp;&amp;<sp/><ref refid="namespace_daemon" kindref="compound">Daemon</ref>.Handler.ModDaemons.TryGetValue(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>out<sp/>i))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>objs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;string,<sp/>string&gt;();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>storedObjects<sp/>=<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_load_computer_xml_read_event_1a4fdbd3e2d8b775425b1f698a568258f9" kindref="member">Reader</ref>.GetAttribute(</highlight><highlight class="stringliteral">&quot;storedObjects&quot;</highlight><highlight class="normal">)?.Split(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storedObjects<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>storedObjects)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objs[s.Remove(s.IndexOf(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">))]<sp/>=<sp/>s.Substring(s.IndexOf(</highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_computer_event_1a936079c75c9135637f9a7d454a722dd2" kindref="member">Computer</ref>.<ref refid="class_hacknet_1_1_computer_1a01045e3da061a37b1356afa039c911df" kindref="member">daemons</ref>.Add(<ref refid="namespace_daemon" kindref="compound">Daemon</ref>.Instance.CreateInstance(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_computer_event_1a936079c75c9135637f9a7d454a722dd2" kindref="member">Computer</ref>,<sp/>objs));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExecutableListener(<ref refid="class_pathfinder_1_1_event_1_1_executable_execute_event" kindref="compound">ExecutableExecuteEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tuple&lt;<ref refid="namespace_executable" kindref="compound">Executable</ref>.IInterface,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;<sp/>tuple;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespace_executable" kindref="compound">Executable</ref>.Handler.IsFileDataForModExe(e.<ref refid="class_pathfinder_1_1_event_1_1_executable_execute_event_1a68dfdeba14a358adb93d5a62d0589695" kindref="member">ExecutableFile</ref>.<ref refid="class_hacknet_1_1_file_entry_1aca39eab2e5dc6df1200313a81132441c" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="namespace_executable" kindref="compound">Executable</ref>.Handler.ModExecutables.TryGetValue(e.<ref refid="class_pathfinder_1_1_event_1_1_executable_execute_event_1a68dfdeba14a358adb93d5a62d0589695" kindref="member">ExecutableFile</ref>.<ref refid="class_hacknet_1_1_file_entry_1aca39eab2e5dc6df1200313a81132441c" kindref="member">data</ref>.Split(</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)[0],<sp/>out<sp/>tuple))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_event_1a4c14b0aa1c1d4260eafc86327df31f52" kindref="member">OS</ref>.<ref refid="class_hacknet_1_1_o_s_1afad871fe64d18ac288c36e97d206cbea" kindref="member">ram</ref>.<ref refid="class_hacknet_1_1_module_1a9f5568515780ca1149d57051fc2f7c77" kindref="member">bounds</ref>.Y<sp/>+<sp/><ref refid="class_hacknet_1_1_ram_module" kindref="compound">RamModule</ref>.<ref refid="class_hacknet_1_1_ram_module_1a8aa448c3b6e5fd50b479166642500bd8" kindref="member">contentStartOffset</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>exe<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_event_1a4c14b0aa1c1d4260eafc86327df31f52" kindref="member">OS</ref>.<ref refid="class_hacknet_1_1_o_s_1ac8771d1eb4c342e5abddbdd9a08f2dc0" kindref="member">exes</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>+=<sp/>exe.bounds.Height;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>location<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="_vector_8cs_1a9e9352b983f7014fddce7c6530f054d7" kindref="member">Rectangle</ref>(e.<ref refid="class_pathfinder_1_1_event_1_1_executable_event_1a4c14b0aa1c1d4260eafc86327df31f52" kindref="member">OS</ref>.<ref refid="class_hacknet_1_1_o_s_1afad871fe64d18ac288c36e97d206cbea" kindref="member">ram</ref>.<ref refid="class_hacknet_1_1_module_1a9f5568515780ca1149d57051fc2f7c77" kindref="member">bounds</ref>.X,<sp/>num,<sp/><ref refid="class_hacknet_1_1_ram_module" kindref="compound">RamModule</ref>.<ref refid="class_hacknet_1_1_ram_module_1a4ade89e80b04829484a95fae69c5833b" kindref="member">MODULE_WIDTH</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_hacknet_1_1_o_s" kindref="compound">OS</ref>.<ref refid="class_hacknet_1_1_o_s_1a0011055f3312fcba0a20840561a92b4d" kindref="member">EXE_MODULE_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_event_1a4c14b0aa1c1d4260eafc86327df31f52" kindref="member">OS</ref>.<ref refid="class_hacknet_1_1_o_s_1af990b04e4787243757621daca25e8d08" kindref="member">addExe</ref>(<ref refid="namespace_executable" kindref="compound">Executable</ref>.Instance.CreateInstance(tuple.Item1,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_execute_event_1a68dfdeba14a358adb93d5a62d0589695" kindref="member">ExecutableFile</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_event_1a4c14b0aa1c1d4260eafc86327df31f52" kindref="member">OS</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_event_1a456d3ea9ab10d4a0abcf7272ff1a1360" kindref="member">Arguments</ref>,<sp/>location));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_executable_execute_event_1aa93d64b15191fe49c8d2a455ab7d08bb" kindref="member">Result</ref><sp/>=<sp/><ref refid="namespace_executable" kindref="compound">Executable</ref>.ExecutionResult.StartupSuccess;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateDisplayModes(OptionsMenu<sp/>m)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>mode<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>m.ScreenManager.GraphicsDevice.Adapter.SupportedDisplayModes)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list.Contains(mode.Width<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>+<sp/>mode.Height))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.Add(mode.Width<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>+<sp/>mode.Height);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.getCurrentResolution().Equals(list[list.Count<sp/>-<sp/>1]))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.currentResIndex<sp/>=<sp/>list.Count<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.Sort();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.currentResIndex<sp/>=<sp/>list.FindIndex((obj)<sp/>=&gt;<sp/>obj.Equals(m.getCurrentResolution()));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.currentResIndex<sp/>==<sp/>-1)<sp/>m.currentResIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OptionsMenuLoadContentListener(<ref refid="class_pathfinder_1_1_event_1_1_options_menu_load_content_event" kindref="compound">OptionsMenuLoadContentEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateDisplayModes(e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespace_mod_options" kindref="compound">ModOptions</ref>.Handler.ModOptions)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.Value.LoadContent(e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OptionsMenuApplyListener(<ref refid="class_pathfinder_1_1_event_1_1_options_menu_apply_event" kindref="compound">OptionsMenuApplyEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespace_mod_options" kindref="compound">ModOptions</ref>.Handler.ModOptions)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.Value.Apply(e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateDisplayMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OptionsMenuUpdateListener(<ref refid="class_pathfinder_1_1_event_1_1_options_menu_update_event" kindref="compound">OptionsMenuUpdateEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateDisplayMode<sp/>&amp;&amp;<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>.windowed<sp/>==<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>.getIfWindowed())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateDisplayModes(e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateDisplayMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>updateDisplayMode<sp/>|=<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>.windowed<sp/>!=<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>.getIfWindowed();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>updates<sp/>the<sp/>resolutions<sp/>on<sp/>the<sp/>options<sp/>menu<sp/>on<sp/>the<sp/>next<sp/>update<sp/>so<sp/>that<sp/>it<sp/>be<sp/>accurate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>according<sp/>to<sp/>the<sp/>window<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="namespace_mod_options" kindref="compound">ModOptions</ref>.Handler.ModOptions)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o.Value.Update(e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_update_event_1af0d9d31e84f36b54da3dcc567c4bb74a" kindref="member">GameTime</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_update_event_1a030943501b818d32df801cee0c6b8cb3" kindref="member">ScreenNotFocused</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_update_event_1ad0e41f3e69e1f7a834ed38b93cd6431e" kindref="member">ScreenIsCovered</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>selected;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OptionsMenuDrawListener(<ref refid="class_pathfinder_1_1_event_1_1_options_menu_draw_event" kindref="compound">OptionsMenuDrawEvent</ref><sp/>e)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selected<sp/>==<sp/>null<sp/>||<sp/>!<ref refid="namespace_mod_options" kindref="compound">ModOptions</ref>.Handler.ModOptions.ContainsKey(selected))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_pathfinder_event_1a97787d999e89e0e767f3d8961d2981fa" kindref="member">IsCancelled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_mod_options" kindref="compound">ModOptions</ref>.Handler.ModOptions[selected].Draw(e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_event_1ae2fa102bacdd0a270ea797432c1b17d4" kindref="member">OptionsMenu</ref>,<sp/>e.<ref refid="class_pathfinder_1_1_event_1_1_options_menu_draw_event_1a777d674d9e244f6ecbd9c6259381be4d" kindref="member">GameTime</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Pathfinder/Internal/HandlerListener.cs"/>
  </compounddef>
</doxygen>
